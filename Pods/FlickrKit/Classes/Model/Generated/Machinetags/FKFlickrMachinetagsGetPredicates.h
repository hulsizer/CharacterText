//
//  FKFlickrMachinetagsGetPredicates.h
//  FlickrKit
//
//  Generated by FKAPIBuilder on 19 Sep, 2014 at 10:49.
//  Copyright (c) 2013 DevedUp Ltd. All rights reserved. http://www.devedup.com
//
//  DO NOT MODIFY THIS FILE - IT IS MACHINE GENERATED


#import "FKFlickrAPIMethod.h"

typedef enum {
	FKFlickrMachinetagsGetPredicatesError_NotAValidNamespace = 1,		 /* Missing or invalid namespace argument. */
	FKFlickrMachinetagsGetPredicatesError_InvalidAPIKey = 100,		 /* The API key passed was not valid or has expired. */
	FKFlickrMachinetagsGetPredicatesError_ServiceCurrentlyUnavailable = 105,		 /* The requested service is temporarily unavailable. */
	FKFlickrMachinetagsGetPredicatesError_WriteOperationFailed = 106,		 /* The requested operation failed due to a temporary issue. */
	FKFlickrMachinetagsGetPredicatesError_FormatXXXNotFound = 111,		 /* The requested response format was not found. */
	FKFlickrMachinetagsGetPredicatesError_MethodXXXNotFound = 112,		 /* The requested method was not found. */
	FKFlickrMachinetagsGetPredicatesError_InvalidSOAPEnvelope = 114,		 /* The SOAP envelope send in the request could not be parsed. */
	FKFlickrMachinetagsGetPredicatesError_InvalidXMLRPCMethodCall = 115,		 /* The XML-RPC request document could not be parsed. */
	FKFlickrMachinetagsGetPredicatesError_BadURLFound = 116,		 /* One or more arguments contained a URL that has been used for abuse on Flickr. */

} FKFlickrMachinetagsGetPredicatesError;

/*

Return a list of unique predicates, optionally limited by a given namespace.


Response:

<predicates page="1" pages="1" total="3" perpage="500">
    <predicate usage="20" namespaces="1">elbow</predicate>
    <predicate usage="52" namespaces="2">face</predicate>
    <predicate usage="10" namespaces="1">hand</predicate>
</predicates>


*/
@interface FKFlickrMachinetagsGetPredicates : NSObject <FKFlickrAPIMethod>

/* Limit the list of predicates returned to those that have the following namespace. */
@property (nonatomic, copy) NSString *namespace;

/* Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500. */
@property (nonatomic, copy) NSString *per_page;

/* The page of results to return. If this argument is omitted, it defaults to 1. */
@property (nonatomic, copy) NSString *page;


@end
