//
//  FKFlickrStatsGetPopularPhotos.h
//  FlickrKit
//
//  Generated by FKAPIBuilder on 19 Sep, 2014 at 10:49.
//  Copyright (c) 2013 DevedUp Ltd. All rights reserved. http://www.devedup.com
//
//  DO NOT MODIFY THIS FILE - IT IS MACHINE GENERATED


#import "FKFlickrAPIMethod.h"

typedef enum {
	FKFlickrStatsGetPopularPhotosError_UserDoesNotHaveStats = 1,		 /* The user you have requested stats has not enabled stats on their account. */
	FKFlickrStatsGetPopularPhotosError_NoStatsForThatDate = 2,		 /* No stats are available for the date requested. Flickr only keeps stats data for the last 28 days. */
	FKFlickrStatsGetPopularPhotosError_InvalidDate = 3,		 /* The date provided could not be parsed */
	FKFlickrStatsGetPopularPhotosError_InvalidSort = 5,		 /* The sort provided is not valid */
	FKFlickrStatsGetPopularPhotosError_SSLIsRequired = 95,		 /* SSL is required to access the Flickr API. */
	FKFlickrStatsGetPopularPhotosError_InvalidSignature = 96,		 /* The passed signature was invalid. */
	FKFlickrStatsGetPopularPhotosError_MissingSignature = 97,		 /* The call required signing but no signature was sent. */
	FKFlickrStatsGetPopularPhotosError_LoginFailedOrInvalidAuthToken = 98,		 /* The login details or auth token passed were invalid. */
	FKFlickrStatsGetPopularPhotosError_UserNotLoggedInOrInsufficientPermissions = 99,		 /* The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions. */
	FKFlickrStatsGetPopularPhotosError_InvalidAPIKey = 100,		 /* The API key passed was not valid or has expired. */
	FKFlickrStatsGetPopularPhotosError_ServiceCurrentlyUnavailable = 105,		 /* The requested service is temporarily unavailable. */
	FKFlickrStatsGetPopularPhotosError_WriteOperationFailed = 106,		 /* The requested operation failed due to a temporary issue. */
	FKFlickrStatsGetPopularPhotosError_FormatXXXNotFound = 111,		 /* The requested response format was not found. */
	FKFlickrStatsGetPopularPhotosError_MethodXXXNotFound = 112,		 /* The requested method was not found. */
	FKFlickrStatsGetPopularPhotosError_InvalidSOAPEnvelope = 114,		 /* The SOAP envelope send in the request could not be parsed. */
	FKFlickrStatsGetPopularPhotosError_InvalidXMLRPCMethodCall = 115,		 /* The XML-RPC request document could not be parsed. */
	FKFlickrStatsGetPopularPhotosError_BadURLFound = 116,		 /* One or more arguments contained a URL that has been used for abuse on Flickr. */

} FKFlickrStatsGetPopularPhotosError;

/*

List the photos with the most views, comments or favorites

<p>This method returns the standard photo list xml.</p>

<p>In addition each photo element contains a <code>&lt;stats&gt;</code> element. This has attributes for the view, comment and favorite counts for the requested day.</p>

<p>To map <code>&lt;photo&gt;</code> elements to urls, please read the <a href="misc.urls.html">url documentation</a>.</p>


Response:

<photos page="2" pages="89" perpage="10" total="881">
	<photo id="2636" owner="47058503995@N01" 
		secret="a123456" server="2" title="test_04"
		ispublic="1" isfriend="0" isfamily="0">
		<stats views="941" comments="18" favorites="2"/>
	</photo>
	<photo id="2635" owner="47058503995@N01"
		secret="b123456" server="2" title="test_03"
		ispublic="0" isfriend="1" isfamily="1">
		<stats views="141" comments="1" favorites="2"/>
	</photo>
</photos>

*/
@interface FKFlickrStatsGetPopularPhotos : NSObject <FKFlickrAPIMethod>

/* Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format. 

A day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day.

If no date is provided, all time view counts will be returned. */
@property (nonatomic, copy) NSString *date;

/* The order in which to sort returned photos. Defaults to views. The possible values are views, comments and favorites. 

Other sort options are available through <a href="/services/api/flickr.photos.search.html">flickr.photos.search</a>. */
@property (nonatomic, copy) NSString *sort;

/* Number of referrers to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100. */
@property (nonatomic, copy) NSString *per_page;

/* The page of results to return. If this argument is omitted, it defaults to 1. */
@property (nonatomic, copy) NSString *page;


@end
