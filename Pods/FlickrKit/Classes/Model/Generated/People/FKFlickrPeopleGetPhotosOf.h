//
//  FKFlickrPeopleGetPhotosOf.h
//  FlickrKit
//
//  Generated by FKAPIBuilder on 19 Sep, 2014 at 10:49.
//  Copyright (c) 2013 DevedUp Ltd. All rights reserved. http://www.devedup.com
//
//  DO NOT MODIFY THIS FILE - IT IS MACHINE GENERATED


#import "FKFlickrAPIMethod.h"

typedef enum {
	FKFlickrPeopleGetPhotosOfError_UserNotFound = 1,		 /* A user_id was passed which did not match a valid flickr user. */
	FKFlickrPeopleGetPhotosOfError_InvalidAPIKey = 100,		 /* The API key passed was not valid or has expired. */
	FKFlickrPeopleGetPhotosOfError_ServiceCurrentlyUnavailable = 105,		 /* The requested service is temporarily unavailable. */
	FKFlickrPeopleGetPhotosOfError_WriteOperationFailed = 106,		 /* The requested operation failed due to a temporary issue. */
	FKFlickrPeopleGetPhotosOfError_FormatXXXNotFound = 111,		 /* The requested response format was not found. */
	FKFlickrPeopleGetPhotosOfError_MethodXXXNotFound = 112,		 /* The requested method was not found. */
	FKFlickrPeopleGetPhotosOfError_InvalidSOAPEnvelope = 114,		 /* The SOAP envelope send in the request could not be parsed. */
	FKFlickrPeopleGetPhotosOfError_InvalidXMLRPCMethodCall = 115,		 /* The XML-RPC request document could not be parsed. */
	FKFlickrPeopleGetPhotosOfError_BadURLFound = 116,		 /* One or more arguments contained a URL that has been used for abuse on Flickr. */

} FKFlickrPeopleGetPhotosOfError;

/*

Returns a list of photos containing a particular Flickr member.

<p>This method returns a variant of the standard photo list xml.</p>

<p>For queries about a member other than the currently authenticated one, pagination data ("total" and "pages" attributes) will not be available.</p>

<p>Instead, the <photos> element will contain a boolean value 'has_next_page' which will tell you whether or not there are more photos to fetch.</p>

Response:

<photos page="2" has_next_page="1" perpage="10">
	<photo id="2636" owner="47058503995@N01" 
		secret="a123456" server="2" title="test_04"
		ispublic="1" isfriend="0" isfamily="0" />
	<photo id="2635" owner="47058503995@N01"
		secret="b123456" server="2" title="test_03"
		ispublic="0" isfriend="1" isfamily="1" />
	<photo id="2633" owner="47058503995@N01"
		secret="c123456" server="2" title="test_01"
		ispublic="1" isfriend="0" isfamily="0" />
	<photo id="2610" owner="12037949754@N01"
		secret="d123456" server="2" title="00_tall"
		ispublic="1" isfriend="0" isfamily="0" />
</photos>

*/
@interface FKFlickrPeopleGetPhotosOf : NSObject <FKFlickrAPIMethod>

/* The NSID of the user you want to find photos of. A value of "me" will search against photos of the calling user, for authenticated calls. */
@property (nonatomic, copy) NSString *user_id; /* (Required) */

/* An NSID of a Flickr member. This will restrict the list of photos to those taken by that member. */
@property (nonatomic, copy) NSString *owner_id;

/* A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: <code>description</code>, <code>license</code>, <code>date_upload</code>, <code>date_taken</code>, <code>date_person_added</code>, <code>owner_name</code>, <code>icon_server</code>, <code>original_format</code>, <code>last_update</code>, <code>geo</code>, <code>tags</code>, <code>machine_tags</code>, <code>o_dims</code>, <code>views</code>, <code>media</code>, <code>path_alias</code>, <code>url_sq</code>, <code>url_t</code>, <code>url_s</code>, <code>url_q</code>, <code>url_m</code>, <code>url_n</code>, <code>url_z</code>, <code>url_c</code>, <code>url_l</code>, <code>url_o</code> */
@property (nonatomic, copy) NSString *extras;

/* Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500. */
@property (nonatomic, copy) NSString *per_page;

/* The page of results to return. If this argument is omitted, it defaults to 1. */
@property (nonatomic, copy) NSString *page;


@end
