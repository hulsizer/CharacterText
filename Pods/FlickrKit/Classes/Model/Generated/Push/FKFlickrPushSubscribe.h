//
//  FKFlickrPushSubscribe.h
//  FlickrKit
//
//  Generated by FKAPIBuilder on 19 Sep, 2014 at 10:49.
//  Copyright (c) 2013 DevedUp Ltd. All rights reserved. http://www.devedup.com
//
//  DO NOT MODIFY THIS FILE - IT IS MACHINE GENERATED


#import "FKFlickrAPIMethod.h"

typedef enum {
	FKFlickrPushSubscribeError_RequiredParameterMissing = 1,		 /* One of the required arguments for the method was not provided. */
	FKFlickrPushSubscribeError_InvalidParameterValue = 2,		 /* One of the arguments was specified with an illegal value. */
	FKFlickrPushSubscribeError_CallbackURLAlreadyInUseForADifferentSubscription = 3,		 /* A different subscription already exists that uses the same callback URL. */
	FKFlickrPushSubscribeError_CallbackFailedOrInvalidResponse = 4,		 /* The verification callback failed, or failed to return the expected response to confirm the subscription. */
	FKFlickrPushSubscribeError_ServiceCurrentlyAvailableOnlyToProAccounts = 5,		 /* PuSH subscriptions are currently restricted to Pro account holders. */
	FKFlickrPushSubscribeError_SubscriptionAwaitingVerificationCallbackResponseTryAgainLater = 6,		 /* A subscription with those details exists already, but it is in a pending (non-verified) state. Please wait a bit for the verification callback to complete before attempting to update the subscription. */
	FKFlickrPushSubscribeError_SSLIsRequired = 95,		 /* SSL is required to access the Flickr API. */
	FKFlickrPushSubscribeError_InvalidSignature = 96,		 /* The passed signature was invalid. */
	FKFlickrPushSubscribeError_MissingSignature = 97,		 /* The call required signing but no signature was sent. */
	FKFlickrPushSubscribeError_LoginFailedOrInvalidAuthToken = 98,		 /* The login details or auth token passed were invalid. */
	FKFlickrPushSubscribeError_UserNotLoggedInOrInsufficientPermissions = 99,		 /* The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions. */
	FKFlickrPushSubscribeError_InvalidAPIKey = 100,		 /* The API key passed was not valid or has expired. */
	FKFlickrPushSubscribeError_ServiceCurrentlyUnavailable = 105,		 /* The requested service is temporarily unavailable. */
	FKFlickrPushSubscribeError_WriteOperationFailed = 106,		 /* The requested operation failed due to a temporary issue. */
	FKFlickrPushSubscribeError_FormatXXXNotFound = 111,		 /* The requested response format was not found. */
	FKFlickrPushSubscribeError_MethodXXXNotFound = 112,		 /* The requested method was not found. */
	FKFlickrPushSubscribeError_InvalidSOAPEnvelope = 114,		 /* The SOAP envelope send in the request could not be parsed. */
	FKFlickrPushSubscribeError_InvalidXMLRPCMethodCall = 115,		 /* The XML-RPC request document could not be parsed. */
	FKFlickrPushSubscribeError_BadURLFound = 116,		 /* One or more arguments contained a URL that has been used for abuse on Flickr. */

} FKFlickrPushSubscribeError;

/*

In ur pandas, tickling ur unicorn
<br><br>
<i>(this method is experimental and may change)</i>




*/
@interface FKFlickrPushSubscribe : NSObject <FKFlickrAPIMethod>

/* The type of subscription. See <a href="http://www.flickr.com/services/api/flickr.push.getTopics.htm">flickr.push.getTopics</a>. */
@property (nonatomic, copy) NSString *topic; /* (Required) */

/* The url for the subscription endpoint. Limited to 255 bytes, and must be unique for this user, i.e. no two subscriptions for a given user may use the same callback url. */
@property (nonatomic, copy) NSString *callback; /* (Required) */

/* The verification mode, either <code>sync</code> or <code>async</code>. See the <a href="http://pubsubhubbub.googlecode.com/svn/trunk/pubsubhubbub-core-0.3.html#subscribingl">Google PubSubHubbub spec</a> for details. */
@property (nonatomic, copy) NSString *verify; /* (Required) */

/* The verification token to be echoed back to the subscriber during the verification callback, as per the <a href="http://pubsubhubbub.googlecode.com/svn/trunk/pubsubhubbub-core-0.3.html#subscribing">Google PubSubHubbub spec</a>. Limited to 200 bytes. */
@property (nonatomic, copy) NSString *verify_token;

/* Number of seconds for which the subscription will be valid. Legal values are 60 to 86400 (1 minute to 1 day). If not present, the subscription will be auto-renewing. */
@property (nonatomic, copy) NSString *lease_seconds;

/* A 32-bit integer for a <a href="http://developer.yahoo.com/geo/geoplanet/">Where on Earth ID</a>. Only valid if <code>topic</code> is <code>geo</code>.
<br/><br/>
The order of precedence for geo subscriptions is : woe ids, place ids, radial i.e. the <code>lat, lon</code> parameters will be ignored if <code>place_ids</code> is present, which will be ignored if <code>woe_ids</code> is present. */
@property (nonatomic, copy) NSString *woe_ids;

/* A comma-separated list of Flickr place IDs. Only valid if <code>topic</code> is <code>geo</code>.
<br/><br/>
The order of precedence for geo subscriptions is : woe ids, place ids, radial i.e. the <code>lat, lon</code> parameters will be ignored if <code>place_ids</code> is present, which will be ignored if <code>woe_ids</code> is present. */
@property (nonatomic, copy) NSString *place_ids;

/* A latitude value, in decimal format. Only valid if <code>topic</code> is <code>geo</code>. Defines the latitude for a radial query centered around (lat, lon).
<br/><br/>
The order of precedence for geo subscriptions is : woe ids, place ids, radial i.e. the <code>lat, lon</code> parameters will be ignored if <code>place_ids</code> is present, which will be ignored if <code>woe_ids</code> is present. */
@property (nonatomic, copy) NSString *lat;

/* A longitude value, in decimal format. Only valid if <code>topic</code> is <code>geo</code>. Defines the longitude for a radial query centered around (lat, lon).
<br/><br/>
The order of precedence for geo subscriptions is : woe ids, place ids, radial i.e. the <code>lat, lon</code> parameters will be ignored if <code>place_ids</code> is present, which will be ignored if <code>woe_ids</code> is present. */
@property (nonatomic, copy) NSString *lon;

/* A radius value, in the units defined by radius_units. Only valid if <code>topic</code> is <code>geo</code>. Defines the radius of a circle for a radial query centered around (lat, lon). Default is 5 km.
<br/><br/>
The order of precedence for geo subscriptions is : woe ids, place ids, radial i.e. the <code>lat, lon</code> parameters will be ignored if <code>place_ids</code> is present, which will be ignored if <code>woe_ids</code> is present. */
@property (nonatomic, copy) NSString *radius;

/* Defines the units for the radius parameter. Only valid if <code>topic</code> is <code>geo</code>. Options are <code>mi</code> and <code>km</code>. Default is <code>km</code>.
<br/><br/>
The order of precedence for geo subscriptions is : woe ids, place ids, radial i.e. the <code>lat, lon</code> parameters will be ignored if <code>place_ids</code> is present, which will be ignored if <code>woe_ids</code> is present. */
@property (nonatomic, copy) NSString *radius_units;

/* Defines the minimum accuracy required for photos to be included in a subscription. Only valid if <code>topic</code> is <code>geo</code> Legal values are 1-16, default is 1 (i.e. any accuracy level).
<ul>
<li>World level is 1</li>
<li>Country is ~3</li>
<li>Region is ~6</li>
<li>City is ~11</li>
<li>Street is ~16</li>
</ul> */
@property (nonatomic, copy) NSString *accuracy;

/* A comma-separated list of nsids representing Flickr Commons institutions (see <a href="http://www.flickr.com/services/api/flickr.commons.getInstitutions.html">flickr.commons.getInstitutions</a>). Only valid if <code>topic</code> is <code>commons</code>. If not present this argument defaults to all Flickr Commons institutions. */
@property (nonatomic, copy) NSString *nsids;

/* A comma-separated list of strings to be used for tag subscriptions. Photos with one or more of the tags listed will be included in the subscription. Only valid if the <code>topic</code> is <code>tags</code>. */
@property (nonatomic, copy) NSString *tags;


@end
