//
//  FKFlickrPlacesGetInfo.h
//  FlickrKit
//
//  Generated by FKAPIBuilder on 19 Sep, 2014 at 10:49.
//  Copyright (c) 2013 DevedUp Ltd. All rights reserved. http://www.devedup.com
//
//  DO NOT MODIFY THIS FILE - IT IS MACHINE GENERATED


#import "FKFlickrAPIMethod.h"

typedef enum {
	FKFlickrPlacesGetInfoError_RequiredParameterMissing = 1,		 /* One or more required parameter is missing from the API call. */
	FKFlickrPlacesGetInfoError_NotAValidPlacesID = 2,		 /* An invalid Places (or WOE) ID was passed with the API call. */
	FKFlickrPlacesGetInfoError_PlaceNotFound = 3,		 /* No place could be found for the Places (or WOE) ID passed to the API call. */
	FKFlickrPlacesGetInfoError_InvalidAPIKey = 100,		 /* The API key passed was not valid or has expired. */
	FKFlickrPlacesGetInfoError_ServiceCurrentlyUnavailable = 105,		 /* The requested service is temporarily unavailable. */
	FKFlickrPlacesGetInfoError_WriteOperationFailed = 106,		 /* The requested operation failed due to a temporary issue. */
	FKFlickrPlacesGetInfoError_FormatXXXNotFound = 111,		 /* The requested response format was not found. */
	FKFlickrPlacesGetInfoError_MethodXXXNotFound = 112,		 /* The requested method was not found. */
	FKFlickrPlacesGetInfoError_InvalidSOAPEnvelope = 114,		 /* The SOAP envelope send in the request could not be parsed. */
	FKFlickrPlacesGetInfoError_InvalidXMLRPCMethodCall = 115,		 /* The XML-RPC request document could not be parsed. */
	FKFlickrPlacesGetInfoError_BadURLFound = 116,		 /* One or more arguments contained a URL that has been used for abuse on Flickr. */

} FKFlickrPlacesGetInfoError;

/*

Get informations about a place.

  

Response:

<place place_id="4hLQygSaBJ92" woeid="3534"
   latitude="45.512" longitude="-73.554"
   place_url="/Canada/Quebec/Montreal" place_type="locality"
   has_shapedata="1" timezone="America/Toronto">
   <locality place_id="4hLQygSaBJ92" woeid="3534"
      latitude="45.512" longitude="-73.554"
      place_url="/Canada/Quebec/Montreal">Montreal</locality>
   <county place_id="cFBi9x6bCJ8D5rba1g" woeid="29375198"
      latitude="45.551" longitude="-73.600" 
      place_url="/cFBi9x6bCJ8D5rba1g">Montr√©al</county>
   <region place_id="CrZUvXebApjI0.72" woeid="2344924" 
      latitude="53.890" longitude="-68.429"
      place_url="/Canada/Quebec">Quebec</region>
   <country place_id="EESRy8qbApgaeIkbsA" woeid="23424775"
      latitude="62.358" longitude="-96.582" 
      place_url="/Canada">Canada</country>
   <shapedata created="1223513357" alpha="0.012359619140625"
      count_points="34778" count_edges="52"
      has_donuthole="1" is_donuthole="1">
      <polylines>
         <polyline>
            45.427627563477,-73.589645385742 45.428966522217,-73.587898254395, etc...
         </polyline>
      </polylines>
      <urls>
         <shapefile>
         http://farm4.static.flickr.com/3228/shapefiles/3534_20081111_0a8afe03c5.tar.gz
         </shapefile>
      </urls>
   </shapedata>
</place>

*/
@interface FKFlickrPlacesGetInfo : NSObject <FKFlickrAPIMethod>

/* A Flickr Places ID. <span style="font-style:italic;">(While optional, you must pass either a valid Places ID or a WOE ID.)</span> */
@property (nonatomic, copy) NSString *place_id;

/* A Where On Earth (WOE) ID. <span style="font-style:italic;">(While optional, you must pass either a valid Places ID or a WOE ID.)</span> */
@property (nonatomic, copy) NSString *woe_id;


@end
