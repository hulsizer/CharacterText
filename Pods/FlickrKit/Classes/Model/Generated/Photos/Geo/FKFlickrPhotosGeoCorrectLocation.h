//
//  FKFlickrPhotosGeoCorrectLocation.h
//  FlickrKit
//
//  Generated by FKAPIBuilder on 19 Sep, 2014 at 10:49.
//  Copyright (c) 2013 DevedUp Ltd. All rights reserved. http://www.devedup.com
//
//  DO NOT MODIFY THIS FILE - IT IS MACHINE GENERATED


#import "FKFlickrAPIMethod.h"

typedef enum {
	FKFlickrPhotosGeoCorrectLocationError_UserHasNotConfiguredDefaultViewingSettingsForLocationData = 1,		 /* Before users may assign location data to a photo they must define who, by default, may view that information. Users can edit this preference at <a href="http://www.flickr.com/account/geo/privacy/">http://www.flickr.com/account/geo/privacy/</a> */
	FKFlickrPhotosGeoCorrectLocationError_MissingPlaceID = 2,		 /* No place ID was passed to the method */
	FKFlickrPhotosGeoCorrectLocationError_NotAValidPlaceID = 3,		 /* The place ID passed to the method could not be identified */
	FKFlickrPhotosGeoCorrectLocationError_ServerErrorCorrectingLocation = 4,		 /* There was an error trying to correct the location. */
	FKFlickrPhotosGeoCorrectLocationError_SSLIsRequired = 95,		 /* SSL is required to access the Flickr API. */
	FKFlickrPhotosGeoCorrectLocationError_InvalidSignature = 96,		 /* The passed signature was invalid. */
	FKFlickrPhotosGeoCorrectLocationError_MissingSignature = 97,		 /* The call required signing but no signature was sent. */
	FKFlickrPhotosGeoCorrectLocationError_LoginFailedOrInvalidAuthToken = 98,		 /* The login details or auth token passed were invalid. */
	FKFlickrPhotosGeoCorrectLocationError_UserNotLoggedInOrInsufficientPermissions = 99,		 /* The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions. */
	FKFlickrPhotosGeoCorrectLocationError_InvalidAPIKey = 100,		 /* The API key passed was not valid or has expired. */
	FKFlickrPhotosGeoCorrectLocationError_ServiceCurrentlyUnavailable = 105,		 /* The requested service is temporarily unavailable. */
	FKFlickrPhotosGeoCorrectLocationError_WriteOperationFailed = 106,		 /* The requested operation failed due to a temporary issue. */
	FKFlickrPhotosGeoCorrectLocationError_FormatXXXNotFound = 111,		 /* The requested response format was not found. */
	FKFlickrPhotosGeoCorrectLocationError_MethodXXXNotFound = 112,		 /* The requested method was not found. */
	FKFlickrPhotosGeoCorrectLocationError_InvalidSOAPEnvelope = 114,		 /* The SOAP envelope send in the request could not be parsed. */
	FKFlickrPhotosGeoCorrectLocationError_InvalidXMLRPCMethodCall = 115,		 /* The XML-RPC request document could not be parsed. */
	FKFlickrPhotosGeoCorrectLocationError_BadURLFound = 116,		 /* One or more arguments contained a URL that has been used for abuse on Flickr. */

} FKFlickrPhotosGeoCorrectLocationError;

/*






*/
@interface FKFlickrPhotosGeoCorrectLocation : NSObject <FKFlickrAPIMethod>

/* The ID of the photo whose WOE location is being corrected. */
@property (nonatomic, copy) NSString *photo_id; /* (Required) */

/* A Flickr Places ID. (While optional, you must pass either a valid Places ID or a WOE ID.) */
@property (nonatomic, copy) NSString *place_id;

/* A Where On Earth (WOE) ID. (While optional, you must pass either a valid Places ID or a WOE ID.) */
@property (nonatomic, copy) NSString *woe_id;

/* The venue ID for a Foursquare location. (If not passed in with correction, any existing foursquare venue will be removed). */
@property (nonatomic, copy) NSString *foursquare_id; /* (Required) */


@end
